[InternetShortcut]
URL=file:///d%3A/Documents/GitHub/DSA_Assignment2/docker-compose.yml

version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - logistics-network

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - logistics-network

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: logisticsdb
      MYSQL_USER: user
      MYSQL_PASSWORD: userpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - logistics-network

  logistics-service:
    build: ./logistics-service
    container_name: logistics-service
    depends_on:
      - kafka
      - mysql
    networks:
      - logistics-network
    environment:
      - KAFKA_BROKER=kafka:9092
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=logisticsdb
      - MYSQL_USER=user
      - MYSQL_PASSWORD=userpassword

  standard-delivery-service:
    build: ./standard-delivery-service
    container_name: standard-delivery-service
    depends_on:
      - kafka
    networks:
      - logistics-network
    environment:
      - KAFKA_BROKER=kafka:9092
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=logisticsdb
      - MYSQL_USER=user
      - MYSQL_PASSWORD=userpassword

  express-delivery-service:
    build: ./express-delivery-service
    container_name: express-delivery-service
    depends_on:
      - kafka
    networks:
      - logistics-network
    environment:
      - KAFKA_BROKER=kafka:9092
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=logisticsdb
      - MYSQL_USER=user
      - MYSQL_PASSWORD=userpassword

  international-delivery-service:
    build: ./international-delivery-service
    container_name: international-delivery-service
    depends_on:
      - kafka
    networks:
      - logistics-network
    environment:
      - KAFKA_BROKER=kafka:9092
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=logisticsdb
      - MYSQL_USER=user
      - MYSQL_PASSWORD=userpassword

networks:
  logistics-network:
    driver: bridge

volumes:
  mysql_data: